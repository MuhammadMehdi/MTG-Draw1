#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MTG_Draw
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LocalDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertHoCuraEinbauebenen(HoCuraEinbauebenen instance);
    partial void UpdateHoCuraEinbauebenen(HoCuraEinbauebenen instance);
    partial void DeleteHoCuraEinbauebenen(HoCuraEinbauebenen instance);
    partial void InsertItems(Items instance);
    partial void UpdateItems(Items instance);
    partial void DeleteItems(Items instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::MTG_Draw.Properties.Settings.Default.LocalDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<HoCuraEinbauebenen> HoCuraEinbauebenen
		{
			get
			{
				return this.GetTable<HoCuraEinbauebenen>();
			}
		}
		
		public System.Data.Linq.Table<Items> Items
		{
			get
			{
				return this.GetTable<Items>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoCuraEinbauebenen")]
	public partial class HoCuraEinbauebenen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<double> _X;
		
		private System.Nullable<double> _Y;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnXChanging(System.Nullable<double> value);
    partial void OnXChanged();
    partial void OnYChanging(System.Nullable<double> value);
    partial void OnYChanged();
    #endregion
		
		public HoCuraEinbauebenen()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float")]
		public System.Nullable<double> X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float")]
		public System.Nullable<double> Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Items : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Bezeichnung;
		
		private System.Nullable<double> _Xoffset;
		
		private System.Nullable<double> _Yoffset;
		
		private string _DxfBlock;
		
		private System.Nullable<double> _Abstand;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBezeichnungChanging(string value);
    partial void OnBezeichnungChanged();
    partial void OnXoffsetChanging(System.Nullable<double> value);
    partial void OnXoffsetChanged();
    partial void OnYoffsetChanging(System.Nullable<double> value);
    partial void OnYoffsetChanged();
    partial void OnDxfBlockChanging(string value);
    partial void OnDxfBlockChanged();
    partial void OnAbstandChanging(System.Nullable<double> value);
    partial void OnAbstandChanged();
    #endregion
		
		public Items()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bezeichnung", DbType="VarChar(80)")]
		public string Bezeichnung
		{
			get
			{
				return this._Bezeichnung;
			}
			set
			{
				if ((this._Bezeichnung != value))
				{
					this.OnBezeichnungChanging(value);
					this.SendPropertyChanging();
					this._Bezeichnung = value;
					this.SendPropertyChanged("Bezeichnung");
					this.OnBezeichnungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xoffset", DbType="Float")]
		public System.Nullable<double> Xoffset
		{
			get
			{
				return this._Xoffset;
			}
			set
			{
				if ((this._Xoffset != value))
				{
					this.OnXoffsetChanging(value);
					this.SendPropertyChanging();
					this._Xoffset = value;
					this.SendPropertyChanged("Xoffset");
					this.OnXoffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yoffset", DbType="Float")]
		public System.Nullable<double> Yoffset
		{
			get
			{
				return this._Yoffset;
			}
			set
			{
				if ((this._Yoffset != value))
				{
					this.OnYoffsetChanging(value);
					this.SendPropertyChanging();
					this._Yoffset = value;
					this.SendPropertyChanged("Yoffset");
					this.OnYoffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DxfBlock", DbType="VarChar(80)")]
		public string DxfBlock
		{
			get
			{
				return this._DxfBlock;
			}
			set
			{
				if ((this._DxfBlock != value))
				{
					this.OnDxfBlockChanging(value);
					this.SendPropertyChanging();
					this._DxfBlock = value;
					this.SendPropertyChanged("DxfBlock");
					this.OnDxfBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstand", DbType="Float")]
		public System.Nullable<double> Abstand
		{
			get
			{
				return this._Abstand;
			}
			set
			{
				if ((this._Abstand != value))
				{
					this.OnAbstandChanging(value);
					this.SendPropertyChanging();
					this._Abstand = value;
					this.SendPropertyChanged("Abstand");
					this.OnAbstandChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
